(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{77:function(t,e,n){"use strict";n.r(e);var a=n(0),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"jpush-sdk-fcm通道集成指南"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jpush-sdk-fcm通道集成指南"}},[t._v("#")]),t._v(" JPush SDK FCM通道集成指南")]),t._v(" "),n("h2",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),n("p",[t._v("Firebase 云消息传递 (FCM) 是由 Google 提供的推送服务，可以在服务器和用户设备之间建立可靠而且省电的连接，提高推送送达率。")]),t._v(" "),n("p",[t._v("JPush SDK 为了尽可能提高开发者在国外设备的推送送达率，对集成 FCM 的设备推送，自动切换到 FCM 通道。同时，为了保证 SDK 的易用性，原本 JPush 的所有接口调用逻辑都不用修改,JPush 会对自身支持的功能做兼容。")]),t._v(" "),n("h2",{attrs:{id:"功能描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#功能描述"}},[t._v("#")]),t._v(" 功能描述")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("FCM 集成完成后，在支持的设备上自动进行初始化。")])]),t._v(" "),n("li",[n("p",[t._v("FCM 可以与 JPUSH 和 其他 三方通道 共存。")])]),t._v(" "),n("li",[n("p",[t._v("FCM 通道初始化后支持 tag/alias 这些 JPush 原有的功能,其它的 JPush 未支持的功能目前暂时还不可用。")])]),t._v(" "),n("li",[n("p",[t._v("通知效果：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("应用在前台时，极光收到FCM的广播消息，由极光弹出通知并触ACTION_NOTIFICATION_RECEIVED事件。")])]),t._v(" "),n("li",[n("p",[t._v("应用在后台时，通知由FCM弹出，无法触发ACTION_NOTIFICATION_RECEIVED事件；")])]),t._v(" "),n("li",[n("p",[t._v("无论前后台，点击的通知，如果有指定跳转页面，则跳转到用户配置的activity，未配置则跳转到主页。")])])])])]),t._v(" "),n("p",[n("em",[n("strong",[t._v("注1：")])]),t._v("  使用 FCM 通道需要 Google Play 服务为系统服务且版本不低于17.3.4。\n"),n("em",[n("strong",[t._v("注2：")])]),t._v("  当设备网络环境为非中国时才会通过 FCM 通道进行推送。")]),t._v(" "),n("h2",{attrs:{id:"手动配置集成步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手动配置集成步骤"}},[t._v("#")]),t._v(" 手动配置集成步骤")]),t._v(" "),n("p",[t._v("主要步骤为：")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#1"}},[t._v("1. 添加 FCM SDK 到项目中")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#2"}},[t._v("2. 修改 minSdkVersion 的值")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#3"}},[t._v("3. 配置 JPush 接收 FCM SDK 消息的服务类")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#4"}},[t._v("4. 设置通知图标")])])]),t._v(" "),n("h4",{attrs:{id:"_1-添加fcm-sdk到项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-添加fcm-sdk到项目"}},[t._v("#")]),t._v(" "),n("h3",{attrs:{id:"1"}},[t._v("1.  添加FCM SDK到项目")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("拷贝third-push/fcm/libs中的插件包(jpush-android-plugin-fcm-v3.x.x.jar)到工程libs目录下")])]),t._v(" "),n("li",[n("p",[t._v("在 "),n("a",{attrs:{href:"https://firebase.google.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Firebase"),n("OutboundLink")],1),t._v(" 上创建和 JPush 上同包名的待发布应用,创建完成后下载该应用的 google-services.json 配置文件并添加到应用的 module 目录下。")])]),t._v(" "),n("li",[n("p",[t._v("在根级 build.gradle 中添加规则，以纳入 Google 服务插件 和 Google 的 Maven 代码库,可根据 Firebase 发布的版本更新选择最新版本：")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    buildscript {\n    \tdependencies {\n        \tclasspath 'com.google.gms:google-services:4.2.0'\n        }\n  \t}\n\tallprojects {\n       repositories {\n        \tmaven {\n            \turl \"https://maven.google.com\"\n        \t}\n    \t}\n\t}\n\n")])])]),n("ul",[n("li",[t._v("在应用 module 的 build.gradle 文件底部添加 apply plugin 代码行，以启用 gradle 插件：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\t// ADD THIS AT THE BOTTOM\n    apply plugin: 'com.google.gms.google-services'\n\n")])])]),n("ul",[n("li",[t._v("在应用 module 的 gradle 中 dependencies 节点添加如下代码，可根据 Firebase 发布的版本更新选择最新版本:")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\t dependencies {\n\t    implementation 'com.google.firebase:firebase-core:17.0.0'\n        implementation 'com.google.firebase:firebase-messaging:20.0.0'\n    }\n\n")])])]),n("p",[n("strong",[t._v("注1：")]),t._v("  极光集成 FCM 通道在 JPush Android SDK 3.1.0 添加。")]),t._v(" "),n("p",[n("strong",[t._v("注2：")]),t._v("  极光JPush Android SDK 3.6.0，对应 FCM 通道版本：messaging版本为20.0.0，firebase-core 版本为17.0.0。")]),t._v(" "),n("p",[n("strong",[t._v("注3：")]),t._v(" "),n("a",{attrs:{href:"https://firebase.google.com/docs/android/setup?authuser=0",target:"_blank",rel:"noopener noreferrer"}},[t._v("添加 FCM SDK 的官方文档"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("strong",[t._v("注4：")]),t._v(" 编译时如果遇到类似如下错误,拉取FCM依赖失败,请在 Android Studio->SDK Manager->SDK Tools 中将 Google Play Services 和 Google Repository 更新到最新版本后再试。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Failed to resolve: com.google.firebase:firebase-core:x.x.x\nError:(36, 13) Failed to resolve: com.google.firebase:firebase-messaging:x.x.x\n")])])]),n("h4",{attrs:{id:"_2-修改-minsdkversion-的值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改-minsdkversion-的值"}},[t._v("#")]),t._v(" "),n("h3",{attrs:{id:"2"}},[t._v("2. 修改 minSdkVersion 的值")])]),t._v(" "),n("p",[n("em",[n("strong",[t._v("注:")])]),t._v(" FCM 推送会强制将 minSdkVersion 修改为 14。如果当前 app 使用的 minSdkVersion 的值小于 14,则需要使用 tools 避免被强制覆盖。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\t<manifest\n\t\txmlns:android="http://schemas.android.com/apk/res/android"\n\t\txmlns:tools="http://schemas.android.com/tools"\n\t... >\n\t<uses-sdk\n    \t\tandroid:minSdkVersion="9"\n    \t\tandroid:targetSdkVersion="21"\n    \t\ttools:overrideLibrary=" com.google.android.gms.common.license,\n            com.google.android.gms.tasks.license,\n            com.google.firebase.firebase.common.license,\n            com.google.firebase.firebase.iid.license,\n            com.google.firebase.firebase.messaging.license,\n            com.google.firebase.measurement.impl.license,\n            com.google.firebase.measurement.license,\n            com.google.firebase.firebase_core,\n            com.google.firebase.measurement,\n            com.google.firebase.firebase_common,\n            com.google.firebase.messaging,\n            com.google.firebase.iid,\n            com.google.android.gms,\n            com.google.android.gms.tasks,\n            com.google.firebase.iid.internal,\n            com.google.firebase.analytics.connector,\n            com.google.android.gms.stats,\n            com.google.android.gms.common,\n            com.google.android.gms.measurement.api,\n            com.google.android.gms.ads_identifier,\n            com.google.android.gms.measurement_base,\n            com.google.firebase.analytics.connector.impl,\n            android.support.v4,\n            android.support.compat,\n            android.arch.lifecycle,\n            android.support.mediacompat,\n            android.support.coreutils,\n            android.support.coreui,\n            android.support.fragment,\n            com.google.firebase.measurement_impl"" />\n\n')])])]),n("h4",{attrs:{id:"_3-配置jpush接收的fcm-sdk的消息服务类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置jpush接收的fcm-sdk的消息服务类"}},[t._v("#")]),t._v(" "),n("h3",{attrs:{id:"3"}},[t._v("3. 配置JPush接收的FCM SDK的消息服务类")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<service android:name="cn.jpush.android.service.PluginFCMMessagingService">\n     <intent-filter>\n           <action android:name="com.google.firebase.MESSAGING_EVENT"/>\n     </intent-filter>\n</service>\n\n\n')])])]),n("h4",{attrs:{id:"_4-设置通知栏图标"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-设置通知栏图标"}},[t._v("#")]),t._v(" "),n("h3",{attrs:{id:"4"}},[t._v("4. 设置通知栏图标")])]),t._v(" "),n("p",[t._v("在 AndroidManifest.xml 中增加如下配置来设置 FCM 通知图标。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(' <meta-data\n      android:name="com.google.firebase.messaging.default_notification_icon"\n      android:resource="@drawable/您要配置的通知图标" />\n')])])]),n("h2",{attrs:{id:"点击通知跳转-activity"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#点击通知跳转-activity"}},[t._v("#")]),t._v(" 点击通知跳转 Activity")]),t._v(" "),n("h3",{attrs:{id:"功能说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#功能说明"}},[t._v("#")]),t._v(" 功能说明")]),t._v(" "),n("p",[t._v("FCM 允许开发者在推送通知的时候传入自定义的 intent action 字符串，当用户点击了该通知，系统会根据 action 的值过滤出匹配的 Activity ，并打开 Activity，获取推送内容。")]),t._v(" "),n("h3",{attrs:{id:"使用方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[t._v("#")]),t._v(" 使用方式")]),t._v(" "),n("h4",{attrs:{id:"push-api-推送说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#push-api-推送说明"}},[t._v("#")]),t._v(" Push API 推送说明")]),t._v(" "),n("p",[t._v('在 push api 的 payload 中的 "notification" 的 "android" 节点下添加以下字段：')]),t._v(" "),n("div",{staticClass:"table-d",attrs:{align:"center"}},[n("table",{attrs:{border:"1",width:"100%"}},[n("tr",{attrs:{bgcolor:"#D3D3D3"}},[n("th",[t._v("关键字")]),t._v(" "),n("th",[t._v("类型")]),t._v(" "),n("th",[t._v("示例")]),t._v(" "),n("th",[t._v("说明")])]),t._v(" "),n("tr",[n("td",[t._v("uri_action")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v('"cn.jpush.android.ui.OpenClickActivity"')]),t._v(" "),n("td",[t._v("该字段用于指定开发者想要打开的 activity。值为该activity下您配置的特殊action name")])])])]),t._v(" "),n("p",[n("em",[n("strong",[t._v("示例：")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('demo manifest 配置为：\n \x3c!-- 点击通知时，要打开的 activity --\x3e\n        <activity android:name="com.example.jpushdemo.OpenClickActivity"\n            android:exported="true">\n            <intent-filter>\n                <action android:name="com.example.jpushdemo.OpenClickActivity"/>\n            \t<category android:name="android.intent.category.DEFAULT" />\n            </intent-filter>\n        </activity>\n\n请求json如下：\n{\n    "platform": [\n        "android"\n    ],\n    "audience": "all",\n    "notification": {\n        "android": {\n            "alert": "在线alert003",\n            "title": "在线title003",\n            "uri_action": "com.example.jpushdemo.OpenClickActivity",\n        }\n    },\n    "message": {\n        "msg_content": "自定义消息内容003"\n    }\n}\n')])])]),n("p",[t._v("####SDK 端配置")]),t._v(" "),n("h5",{attrs:{id:"_1-在-androidmanifest-xml-中配置点击通知要打开的-activity"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-在-androidmanifest-xml-中配置点击通知要打开的-activity"}},[t._v("#")]),t._v(" 1. 在 AndroidManifest.xml 中配置点击通知要打开的 activity")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(' <activity android:name="您配置的activity"\n           android:exported="true">\n      <intent-filter>\n            <action android:name="您配置的特殊action"/>\n            <category android:name="android.intent.category.DEFAULT" />\n       </intent-filter>\n </activity>\n')])])]),n("h5",{attrs:{id:"_2-获取通知相关信息"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取通知相关信息"}},[t._v("#")]),t._v(" 2.获取通知相关信息")]),t._v(" "),n("p",[t._v("在您配置的 activity 中的onCreate方法中进行处理，获取通知信息。")]),t._v(" "),n("p",[t._v('通过 getIntent().getExtras().getString("JMessageExtra") 获取到数据。获取到的数据是 JSON 字符串，通过解析可以获得通知相关内容。')]),t._v(" "),n("p",[t._v("JSON 示例如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('{\n\t"msg_id":"123456",\n\t"n_content":"this is content",\n\t"n_extras":{"key1":"value1","key2":"value2"},\n\t"n_title":"this is title",\n\t"rom_type":0\n}\n')])])]),n("p",[t._v("JSON 内容字段说明：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("字段")]),t._v(" "),n("th",[t._v("取值类型")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("msg_id")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("通过此key获取到通知的msgid")])]),t._v(" "),n("tr",[n("td",[t._v("n_title")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("通过此key获取到通知标题")])]),t._v(" "),n("tr",[n("td",[t._v("n_content")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("通过此key获取到通知内容")])]),t._v(" "),n("tr",[n("td",[t._v("n_extras")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("通过此key获取到通知附加字段")])]),t._v(" "),n("tr",[n("td",[t._v("rom_type")]),t._v(" "),n("td",[t._v("byte")]),t._v(" "),n("td",[t._v("通过此key获取到下发通知的平台。得到值说明：byte类型的整数， 0为极光，1为小米，2为华为，3为魅族，4为oppo，5为vivo，8为FCM。")])])])]),t._v(" "),n("p",[n("em",[n("strong",[t._v("注：")])]),t._v(" rom_type 用于点击事件的上报，一般情况下开发者只需要取到该字段的值用于上报，不需要关心具体取值。")]),t._v(" "),n("h5",{attrs:{id:"_3-通知点击上报"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-通知点击上报"}},[t._v("#")]),t._v(" 3.通知点击上报")]),t._v(" "),n("p",[t._v("解析通知内容后，需主动调用接口来进行通知点击上报，上报接口如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/**\n* context 上下文\n* msgId 消息ID\n* whichPushSDK 收到推送的平台，即 rom_type 字段的取值。\n**/\nJPushInterface.reportNotificationOpened(Context context, String msgId, byte whichPushSDK);\n")])])]),n("p",[n("em",[n("strong",[t._v("注：")])]),t._v(" 点击上报必须传入正确的 whichPushSDK 参数，否则会造成统计数据错误。")]),t._v(" "),n("h5",{attrs:{id:"_4-富媒体调整"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-富媒体调整"}},[t._v("#")]),t._v(" 4.富媒体调整")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("为 PushActivity 增加 "),n("code",[t._v('<action android:name="cn.jpush.android.ui.PushActivity" />')]),t._v("。")])]),t._v(" "),n("li",[n("p",[t._v("为 PopWinActivity 增加 "),n("code",[t._v('<action android:name="cn.jpush.android.ui.PopWinActivity" />')]),t._v("。")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<activity\n     android:name="cn.jpush.android.ui.PushActivity"\n     android:configChanges="orientation|keyboardHidden"\n     android:theme="@android:style/Theme.NoTitleBar">\n        <intent-filter>\n            <action android:name="cn.jpush.android.ui.PushActivity" />\n            <category android:name="android.intent.category.DEFAULT" />\n            <category android:name="您的应用的包名" />\n        </intent-filter>\n</activity>\n\n<activity\n     android:name="cn.jpush.android.ui.PopWinActivity"\n     android:configChanges="orientation|keyboardHidden"\n     android:theme="@style/MyDialogStyle">\n        <intent-filter>\n            <category android:name="android.intent.category.DEFAULT" />\n            <category android:name="您的应用的包名" />\n            <action android:name="cn.jpush.android.ui.PopWinActivity"/>\n        </intent-filter>\n</activity>\n')])])]),n("h5",{attrs:{id:"_5-activity-示例代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-activity-示例代码"}},[t._v("#")]),t._v(" 5.Activity 示例代码")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('package com.example.jpushdemo;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.text.TextUtils;\nimport android.util.Log;\nimport android.widget.TextView;\n\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport cn.jpush.android.api.JPushInterface;\n\n/**\n * Created by jiguang on 17/7/5.\n */\n\npublic class OpenClickActivity extends Activity {\n    private static final String TAG = "OpenClickActivity";\n    /**消息Id**/\n    private static final String KEY_MSGID = "msg_id";\n    /**该通知的下发通道**/\n    private static final String KEY_WHICH_PUSH_SDK = "rom_type";\n    /**通知标题**/\n    private static final String KEY_TITLE = "n_title";\n    /**通知内容**/\n    private static final String KEY_CONTENT = "n_content";\n    /**通知附加字段**/\n    private static final String KEY_EXTRAS = "n_extras";\n    private TextView mTextView;\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        mTextView = new TextView(this);\n        setContentView(mTextView);\n        handleOpenClick();\n    }\n\n\n    /**\n     * 处理点击事件，当前启动配置的Activity都是使用\n     * Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK\n     * 方式启动，只需要在onCreat中调用此方法进行处理\n     */\n    private void handleOpenClick() {\n        Log.d(TAG, "用户点击打开了通知");\n        String data = null;\n        //获取华为平台附带的jpush信息\n        if (getIntent().getData() != null) {\n             data = getIntent().getData().toString();\n        }\n\n        //获取fcm、oppo、vivo、华硕、小米平台附带的jpush信息\n        if(TextUtils.isEmpty(data) && getIntent().getExtras() != null){\n            data = getIntent().getExtras().getString("JMessageExtra");\n        }\n\t\t\t\t\n        Log.w(TAG, "msg content is " + String.valueOf(data));\n        if (TextUtils.isEmpty(data)) return;\n        try {\n            JSONObject jsonObject = new JSONObject(data);\n            String msgId = jsonObject.optString(KEY_MSGID);\n            byte whichPushSDK = (byte) jsonObject.optInt(KEY_WHICH_PUSH_SDK);\n            String title = jsonObject.optString(KEY_TITLE);\n            String content = jsonObject.optString(KEY_CONTENT);\n            String extras = jsonObject.optString(KEY_EXTRAS);\n            StringBuilder sb = new StringBuilder();\n            sb.append("msgId:");\n            sb.append(String.valueOf(msgId));\n            sb.append("\\n");\n            sb.append("title:");\n            sb.append(String.valueOf(title));\n            sb.append("\\n");\n            sb.append("content:");\n            sb.append(String.valueOf(content));\n            sb.append("\\n");\n            sb.append("extras:");\n            sb.append(String.valueOf(extras));\n            sb.append("\\n");\n            sb.append("platform:");\n            sb.append(getPushSDKName(whichPushSDK));\n            mTextView.setText(sb.toString());\n\n            //上报点击事件\n            JPushInterface.reportNotificationOpened(this, msgId, whichPushSDK);\n        } catch (JSONException e) {\n            Log.w(TAG, "parse notification error");\n        }\n\n\n    }\n\n    private String getPushSDKName(byte whichPushSDK) {\n        String name;\n        switch (whichPushSDK){\n            case 0:\n                name = "jpush";\n                break;\n            case 1:\n                name = "xiaomi";\n                break;\n            case 2:\n                name = "huawei";\n                break;\n            case 3:\n                name = "meizu";\n                break;\n            case 4:\n                name = "oppo";\n                break;\n            case 5:\n                name = "vivo";\n                break;\n            case 6:\n                name = "asus";\n                break;                \n            case 8:\n                name = "fcm";\n                break;\n            default:\n                name = "jpush";\n        }\n        return name;\n    }\n}\n')])])])])}),[],!1,null,null,null);e.default=i.exports}}]);